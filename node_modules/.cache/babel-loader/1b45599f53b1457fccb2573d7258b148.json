{"ast":null,"code":"const initialState = {\n  status: \"All\",\n  todoList: []\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      {\n        return { ...state,\n          todoList: [...state.todoList, action.payload]\n        };\n      }\n\n    case \"STATUS\":\n      {\n        return { ...state,\n          status: action.payload\n        };\n      }\n\n    case \"COMPLETE\":\n      {\n        return { ...state,\n          todoList: state.todoList.map(todo => todo.id === action.payload ? { ...todo,\n            complete: !todo.complete\n          } : todo)\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/reactjs + nodejs/todoApp redux/todoapp/src/redux/reducer.jsx"],"names":["initialState","status","todoList","rootReducer","state","action","type","payload","map","todo","id","complete"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,KADS;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AAAiB;AACb,eAAO,EACH,GAAGF,KADA;AAEHF,UAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACE,OAA3B;AAFP,SAAP;AAIH;;AACD,SAAK,QAAL;AAAe;AACX,eAAO,EACH,GAAGH,KADA;AAEHH,UAAAA,MAAM,EAAEI,MAAM,CAACE;AAFZ,SAAP;AAIH;;AACD,SAAK,UAAL;AAAiB;AACb,eAAO,EACH,GAAGH,KADA;AAEHF,UAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeM,GAAf,CAAoBC,IAAD,IACzBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAnB,GACM,EAAE,GAAGE,IAAL;AAAWE,YAAAA,QAAQ,EAAE,CAACF,IAAI,CAACE;AAA3B,WADN,GAEMF,IAHA;AAFP,SAAP;AAQH;;AAED;AAAS;AACL,eAAOL,KAAP;AACH;AA1BL;AA4BH,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    status: \"All\",\r\n    todoList: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\": {\r\n            return {\r\n                ...state,\r\n                todoList: [...state.todoList, action.payload],\r\n            };\r\n        }\r\n        case \"STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.payload,\r\n            };\r\n        }\r\n        case \"COMPLETE\": {\r\n            return {\r\n                ...state,\r\n                todoList: state.todoList.map((todo) =>\r\n                    todo.id === action.payload\r\n                        ? { ...todo, complete: !todo.complete }\r\n                        : todo\r\n                ),\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}
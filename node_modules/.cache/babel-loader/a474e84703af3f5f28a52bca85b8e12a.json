{"ast":null,"code":"const initialState = {\n  status: \"All\",\n  todoList: [{\n    id: 1,\n    name: \"hello\",\n    complete: false\n  }, {\n    id: 2,\n    name: \"hello1\",\n    complete: true\n  }]\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      {\n        return { ...state,\n          todoList: [...state.todoList, action.payload]\n        };\n      }\n\n    case \"STATUS\":\n      {\n        return { ...state,\n          status: action.payload\n        };\n      }\n\n    case \"COMPLETE\":\n      {\n        console.log(\"state\", state.todoList);\n        return { ...state,\n          todoList: state.todoList.map(todo => todo.id === action.payload ? { ...todo,\n            complete: !todo.complete\n          } : todo)\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/reactjs + nodejs/todoApp redux/todoapp/src/redux/reducer.jsx"],"names":["initialState","status","todoList","id","name","complete","rootReducer","state","action","type","payload","console","log","map","todo"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,KADS;AAEjBC,EAAAA,QAAQ,EAAE,CACN;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GADM,EAEN;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,QAAf;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GAFM;AAFO,CAArB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AAAiB;AACb,eAAO,EACH,GAAGF,KADA;AAEHL,UAAAA,QAAQ,EAAE,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoBM,MAAM,CAACE,OAA3B;AAFP,SAAP;AAIH;;AACD,SAAK,QAAL;AAAe;AACX,eAAO,EACH,GAAGH,KADA;AAEHN,UAAAA,MAAM,EAAEO,MAAM,CAACE;AAFZ,SAAP;AAIH;;AACD,SAAK,UAAL;AAAiB;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAAK,CAACL,QAA3B;AAEA,eAAO,EACH,GAAGK,KADA;AAEHL,UAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeW,GAAf,CAAoBC,IAAD,IACzBA,IAAI,CAACX,EAAL,KAAYK,MAAM,CAACE,OAAnB,GACM,EAAE,GAAGI,IAAL;AAAWT,YAAAA,QAAQ,EAAE,CAACS,IAAI,CAACT;AAA3B,WADN,GAEMS,IAHA;AAFP,SAAP;AAQH;;AAED;AAAS;AACL,eAAOP,KAAP;AACH;AA5BL;AA8BH,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    status: \"All\",\r\n    todoList: [\r\n        { id: 1, name: \"hello\", complete: false },\r\n        { id: 2, name: \"hello1\", complete: true },\r\n    ],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\": {\r\n            return {\r\n                ...state,\r\n                todoList: [...state.todoList, action.payload],\r\n            };\r\n        }\r\n        case \"STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.payload,\r\n            };\r\n        }\r\n        case \"COMPLETE\": {\r\n            console.log(\"state\", state.todoList);\r\n\r\n            return {\r\n                ...state,\r\n                todoList: state.todoList.map((todo) =>\r\n                    todo.id === action.payload\r\n                        ? { ...todo, complete: !todo.complete }\r\n                        : todo\r\n                ),\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}
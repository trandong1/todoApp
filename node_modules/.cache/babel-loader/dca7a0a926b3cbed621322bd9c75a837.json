{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs + nodejs\\\\todoApp redux\\\\todoapp\\\\src\\\\todo\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport { KeyboardArrowDownOutlined } from \"@material-ui/icons\";\nimport { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport todo from \"./todo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n\n  const handleInput = e => {\n    setInput(e.target.value);\n  };\n\n  const handleAdd = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      dispatch(addTodo({\n        id: uuidv4(),\n        name: input,\n        complete: \"false\"\n      }));\n    }\n\n    setInput(\"\");\n    inputRef.current.focus();\n  };\n\n  console.log(input);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"What needs to be done?\",\n      className: \"todoInput\",\n      value: input,\n      onChange: handleInput,\n      onKeyUp: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"zCV386kFX9+KloQOOVaA6re1QV4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/reactjs + nodejs/todoApp redux/todoapp/src/todo/Todo.jsx"],"names":["KeyboardArrowDownOutlined","useRef","useState","useDispatch","addTodo","v4","uuidv4","todo","Todo","input","setInput","dispatch","inputRef","handleInput","e","target","value","handleAdd","keyCode","preventDefault","id","name","complete","current","focus","console","log"],"mappings":";;;AAAA,SAASA,yBAAT,QAA0C,oBAA1C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGX,MAAM,EAAvB;;AACA,QAAMY,WAAW,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAGA,QAAMC,SAAS,GAAIH,CAAD,IAAO;AACrB,QAAIA,CAAC,CAACI,OAAF,KAAc,EAAlB,EAAsB;AAClBJ,MAAAA,CAAC,CAACK,cAAF;AACAR,MAAAA,QAAQ,CACJP,OAAO,CAAC;AACJgB,QAAAA,EAAE,EAAEd,MAAM,EADN;AAEJe,QAAAA,IAAI,EAAEZ,KAFF;AAGJa,QAAAA,QAAQ,EAAE;AAHN,OAAD,CADH,CAAR;AAOH;;AACDZ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAACW,OAAT,CAAiBC,KAAjB;AACH,GAbD;;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BAEI;AACI,MAAA,GAAG,EAAEG,QADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,wBAHhB;AAII,MAAA,SAAS,EAAC,WAJd;AAKI,MAAA,KAAK,EAAEH,KALX;AAMI,MAAA,QAAQ,EAAEI,WANd;AAOI,MAAA,OAAO,EAAEI;AAPb;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArCD;;GAAMT,I;UAGeL,W;;;KAHfK,I;AAsCN,eAAeA,IAAf","sourcesContent":["import { KeyboardArrowDownOutlined } from \"@material-ui/icons\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport todo from \"./todo.css\";\r\nconst Todo = () => {\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef();\r\n    const handleInput = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n    const handleAdd = (e) => {\r\n        if (e.keyCode === 13) {\r\n            e.preventDefault();\r\n            dispatch(\r\n                addTodo({\r\n                    id: uuidv4(),\r\n                    name: input,\r\n                    complete: \"false\",\r\n                })\r\n            );\r\n        }\r\n        setInput(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n    console.log(input);\r\n    return (\r\n        <div className=\"todo\">\r\n            {/* <KeyboardArrowDownOutlined className=\"todoIcon\" /> */}\r\n            <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                placeholder=\"What needs to be done?\"\r\n                className=\"todoInput\"\r\n                value={input}\r\n                onChange={handleInput}\r\n                onKeyUp={handleAdd}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}